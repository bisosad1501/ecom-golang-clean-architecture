version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecom_postgres
    environment:
      POSTGRES_DB: ecommerce_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecom_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ecom_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecom_network

  # E-commerce API
  api:
    build: .
    container_name: ecom_api
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=development
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=ecommerce_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key
    # volumes:
      # - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - ecom_network
    restart: unless-stopped

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ecom_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ecom_network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:
  uploads_data:

networks:
  ecom_network:
    driver: bridge
